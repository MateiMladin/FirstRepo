// 4.22.0 0x76369715
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_amberback[]; // BITMAP_AMBERBACK_ID = 0, Size: 150x150 pixels
extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 1, Size: 800x480 pixels
extern const unsigned char image_batteryfill[]; // BITMAP_BATTERYFILL_ID = 2, Size: 134x231 pixels
extern const unsigned char image_batteryfillframe[]; // BITMAP_BATTERYFILLFRAME_ID = 3, Size: 136x275 pixels
extern const unsigned char image_batteryfillframeopac[]; // BITMAP_BATTERYFILLFRAMEOPAC_ID = 4, Size: 134x231 pixels
extern const unsigned char image_batterytempsymbol[]; // BITMAP_BATTERYTEMPSYMBOL_ID = 5, Size: 65x65 pixels
extern const unsigned char image_distress[]; // BITMAP_DISTRESS_ID = 6, Size: 78x78 pixels
extern const unsigned char image_distressoff[]; // BITMAP_DISTRESSOFF_ID = 7, Size: 78x78 pixels
extern const unsigned char image_drvorientation[]; // BITMAP_DRVORIENTATION_ID = 8, Size: 78x78 pixels
extern const unsigned char image_drvorientationoff[]; // BITMAP_DRVORIENTATIONOFF_ID = 9, Size: 78x78 pixels
extern const unsigned char image_dtcboxmid[]; // BITMAP_DTCBOXMID_ID = 10, Size: 531x70 pixels
extern const unsigned char image_greenback[]; // BITMAP_GREENBACK_ID = 11, Size: 150x150 pixels
extern const unsigned char image_hazardsymbol[]; // BITMAP_HAZARDSYMBOL_ID = 12, Size: 66x65 pixels
extern const unsigned char image_hourglass[]; // BITMAP_HOURGLASS_ID = 13, Size: 20x28 pixels
extern const unsigned char image_indicatorholdergray[]; // BITMAP_INDICATORHOLDERGRAY_ID = 14, Size: 135x358 pixels
extern const unsigned char image_indicatorholdergrayl[]; // BITMAP_INDICATORHOLDERGRAYL_ID = 15, Size: 135x358 pixels
extern const unsigned char image_levelingframe[]; // BITMAP_LEVELINGFRAME_ID = 16, Size: 168x210 pixels
extern const unsigned char image_menuindicator[]; // BITMAP_MENUINDICATOR_ID = 17, Size: 800x29 pixels
extern const unsigned char image_overloadoff[]; // BITMAP_OVERLOADOFF_ID = 18, Size: 78x78 pixels
extern const unsigned char image_overloadon[]; // BITMAP_OVERLOADON_ID = 19, Size: 78x78 pixels
extern const unsigned char image_pltcapacityyellow70[]; // BITMAP_PLTCAPACITYYELLOW70_ID = 20, Size: 116x72 pixels
extern const unsigned char image_reddot[]; // BITMAP_REDDOT_ID = 21, Size: 18x18 pixels
extern const unsigned char image_smallline[]; // BITMAP_SMALLLINE_ID = 22, Size: 232x5 pixels
extern const unsigned char image_topframe[]; // BITMAP_TOPFRAME_ID = 23, Size: 150x150 pixels
extern const unsigned char image_topglass2[]; // BITMAP_TOPGLASS2_ID = 24, Size: 150x150 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_amberback, 0, 150, 150, 22, 22, 106, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 106, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_background, 0, 800, 480, 0, 0, 800, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_batteryfill, 0, 134, 231, 0, 0, 134, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 231, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_batteryfillframe, 0, 136, 275, 5, 260, 125, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_batteryfillframeopac, 0, 134, 231, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_batterytempsymbol, 0, 65, 65, 24, 2, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_distress, 0, 78, 78, 10, 74, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_distressoff, 0, 78, 78, 10, 74, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_drvorientation, 0, 78, 78, 74, 12, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 54, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_drvorientationoff, 0, 78, 78, 74, 12, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 54, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dtcboxmid, 0, 531, 70, 27, 0, 477, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 67, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_greenback, 0, 150, 150, 22, 22, 106, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 106, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hazardsymbol, 0, 66, 65, 8, 61, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hourglass, 0, 20, 28, 6, 18, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_indicatorholdergray, 0, 135, 358, 28, 0, 107, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 343, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_indicatorholdergrayl, 0, 135, 358, 0, 0, 107, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 343, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_levelingframe, 0, 168, 210, 39, 180, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_menuindicator, 0, 800, 29, 356, 0, 88, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 29, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_overloadoff, 0, 78, 78, 73, 22, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 34, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_overloadon, 0, 78, 78, 73, 22, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 34, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pltcapacityyellow70, 0, 116, 72, 24, 19, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_reddot, 0, 18, 18, 3, 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_smallline, 0, 232, 5, 0, 0, 232, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_topframe, 0, 150, 150, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_topglass2, 0, 150, 150, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
